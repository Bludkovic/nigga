// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesCatalogue.Data;

#nullable disable

namespace MoviesCatalogue.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240323135503_AddedUrlImagesToMovies")]
    partial class AddedUrlImagesToMovies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MoviesCatalogue.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sc-Fi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thriller"
                        });
                });

            modelBuilder.Entity("MoviesCatalogue.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Description = "Space travel and time stuff",
                            Director = "Christopher Nolan",
                            ImageUrl = "",
                            Rating = 9.1199999999999992,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "I drive",
                            Director = "Nicolas Winding",
                            ImageUrl = "",
                            Rating = 7.4500000000000002,
                            Title = "Drive"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "We don't talk about it.",
                            Director = "David Fincher",
                            ImageUrl = "",
                            Rating = 8.9299999999999997,
                            Title = "Fight club"
                        });
                });

            modelBuilder.Entity("MoviesCatalogue.Models.Movie", b =>
                {
                    b.HasOne("MoviesCatalogue.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
